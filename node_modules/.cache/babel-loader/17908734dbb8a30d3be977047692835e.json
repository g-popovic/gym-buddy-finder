{"ast":null,"code":"var _jsxFileName = \"/home/faraznaseem/Side-Projects/login-registration-page-in-nodejs/src/LoginForm.js\";\nimport React from 'react';\nimport InputField from './inputField';\nimport SubmitButton from './SubmitButton';\nimport UserStore from './StoreUserData/UserStore.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass LoginForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      password: '',\n      buttonDisabled: false\n    };\n  }\n\n  setInputValue(property, value) {\n    value = value.trim();\n\n    if (value.length > 12) {\n      return;\n    }\n\n    this.setState({\n      [property]: value\n    });\n  }\n\n  resetForm() {\n    this.setState({\n      username: '',\n      password: '',\n      buttonDisabled: false\n    });\n  }\n\n  async doLogin() {\n    if (!this.state.username) {\n      return;\n    }\n\n    if (!this.state.password) {\n      return;\n    }\n\n    this.setState({\n      buttonDisabled: true\n    });\n\n    try {\n      let res = await fetch('login/', {\n        method: 'post',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username: this.state.username,\n          password: this.state.password\n        })\n      });\n      let result = await res.json();\n\n      if (result && result.success) {\n        UserStore.isLoggedIn = true;\n        UserStore.username = result.username;\n      } else if (result && result.success === false) {\n        this.resetForm();\n        alert(result.msg);\n      }\n    } catch (e) {\n      console.log(e);\n      this.resetForm();\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loginForm\",\n      children: [\"LogIn\", /*#__PURE__*/_jsxDEV(InputField, {\n        type: \"text\",\n        placeholder: \"Username\",\n        value: this.state.username ? this.state.username : '',\n        onChange: value => this.setInputValue('username', value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(InputField, {\n        type: \"password\",\n        placeholder: \"Password\",\n        value: this.state.password ? this.state.password : '',\n        onChange: value => this.setInputValue('password', value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default LoginForm;","map":{"version":3,"sources":["/home/faraznaseem/Side-Projects/login-registration-page-in-nodejs/src/LoginForm.js"],"names":["React","InputField","SubmitButton","UserStore","LoginForm","Component","constructor","props","state","username","password","buttonDisabled","setInputValue","property","value","trim","length","setState","resetForm","doLogin","res","fetch","method","headers","body","JSON","stringify","result","json","success","isLoggedIn","alert","msg","e","console","log","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport InputField from './inputField';\nimport SubmitButton from './SubmitButton';\nimport UserStore from './StoreUserData/UserStore.js';\n\nclass LoginForm extends React.Component{\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            username: '',\n            password: '',\n            buttonDisabled: false\n        }\n    }\n\n    setInputValue(property, value){\n        value = value.trim();\n        if (value.length > 12){\n            return;\n        }\n        this.setState({\n            [property]: value\n        })\n    }\n\n    resetForm() {\n        this.setState({\n            username: '',\n            password: '',\n            buttonDisabled: false\n        })\n    }\n\n    async doLogin() {\n        if (!this.state.username){\n            return;\n        }\n        if(!this.state.password){\n            return;\n        }\n\n        this.setState({buttonDisabled: true})\n        \n        try{\n            let res = await fetch('login/', {\n                method: 'post',\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    username: this.state.username,\n                    password: this.state.password\n                })\n            });\n\n            let result = await res.json();\n            if (result && result.success) {\n                UserStore.isLoggedIn = true;\n                UserStore.username = result.username;\n            }\n            else if (result && result.success === false){\n                this.resetForm();\n                alert (result.msg);\n            }\n        }\n        catch(e){\n            console.log(e);\n            this.resetForm();\n        }\n    }\n\n    render() {\n        return(\n            <div className=\"loginForm\">\n                LogIn\n\n                <InputField \n                type='text'\n                placeholder='Username'\n                value={this.state.username ? this.state.username : ''}\n                onChange={ (value) => this.setInputValue('username', value)}\n                />\n\n                <InputField\n                type='password'\n                placeholder='Password'\n                value={this.state.password ? this.state.password : ''}\n                onChange={ (value) => this.setInputValue('password', value)}\n                />\n                \n            </div>\n        );\n    }\n}\n\nexport default LoginForm;"]},"metadata":{},"sourceType":"module"}