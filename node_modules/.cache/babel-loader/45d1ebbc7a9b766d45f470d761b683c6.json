{"ast":null,"code":"var _jsxFileName = \"/home/faraznaseem/Side-Projects/login-registration-page-in-nodejs/src/App.js\";\nimport React from 'react';\nimport { observer } from 'mobx-react';\nimport UserStore from './StoreUserData/UserStore';\nimport './App.css';\nimport LoginForm from './LoginForm'; //import inputField from './inputField';\n\nimport SubmitButton from './SubmitButton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  //This function is to ensure that the user stays logged in if they refresh the page.\n  async componentDidMount() {\n    try {\n      let res = await fetch('/isLoggedIn', {\n        method: 'post',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n      });\n      let result = await res.json();\n\n      if (result && result.success) {\n        UserStore.loading = false;\n        UserStore.isLoggedIn = true;\n        UserStore.username = result.username;\n      } else {\n        UserStore.loading = false;\n        UserStore.isLoggedIn = false;\n      }\n    } catch (e) {\n      UserStore.loading = false;\n      UserStore.isLoggedIn = false;\n    }\n  }\n\n  async doLogOut() {\n    try {\n      let res = await fetch('/logout', {\n        method: 'post',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n      });\n      let result = await res.json();\n\n      if (result && result.success) {\n        //UserStore.loading = false;\n        UserStore.isLoggedIn = false;\n        UserStore.username = '';\n      }\n    } catch (e) {\n      //UserStore.loading = false;\n      //UserStore.IsLoggedIn = true;\n      console.log(e);\n    }\n  }\n\n  render() {\n    if (UserStore.loading) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: \"Loading, please wait...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this);\n    } else {\n      if (UserStore.isLoggedIn) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"app\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"container\",\n            children: [\"Welcome, \", UserStore.username, \"!\", /*#__PURE__*/_jsxDEV(SubmitButton, {\n              text: 'Log out',\n              disabled: false,\n              onClick: () => this.doLogOut()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this);\n      }\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(SubmitButton, {\n          text: \"Login\",\n          disabled: false,\n          onClick: () => this.doLogOut()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(LoginForm, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default _c = observer(App);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["/home/faraznaseem/Side-Projects/login-registration-page-in-nodejs/src/App.js"],"names":["React","observer","UserStore","LoginForm","SubmitButton","App","Component","componentDidMount","res","fetch","method","headers","result","json","success","loading","isLoggedIn","username","e","doLogOut","console","log","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,YAAzB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAO,WAAP;AACA,OAAOC,SAAP,MAAsB,aAAtB,C,CACA;;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;;AAEA,MAAMC,GAAN,SAAkBL,KAAK,CAACM,SAAxB,CAAkC;AAGhC;AACuB,QAAjBC,iBAAiB,GAAE;AACvB,QAAG;AACD,UAAIC,GAAG,GAAG,MAAMC,KAAK,CAAC,aAAD,EAAgB;AACnCC,QAAAA,MAAM,EAAE,MAD2B;AAEnCC,QAAAA,OAAO,EAAE;AACP,oBAAU,kBADH;AAEP,0BAAgB;AAFT;AAF0B,OAAhB,CAArB;AAQA,UAAIC,MAAM,GAAG,MAAMJ,GAAG,CAACK,IAAJ,EAAnB;;AAEA,UAAID,MAAM,IAAIA,MAAM,CAACE,OAArB,EAA8B;AAC5BZ,QAAAA,SAAS,CAACa,OAAV,GAAoB,KAApB;AACAb,QAAAA,SAAS,CAACc,UAAV,GAAuB,IAAvB;AACAd,QAAAA,SAAS,CAACe,QAAV,GAAqBL,MAAM,CAACK,QAA5B;AACD,OAJD,MAMI;AACFf,QAAAA,SAAS,CAACa,OAAV,GAAoB,KAApB;AACAb,QAAAA,SAAS,CAACc,UAAV,GAAuB,KAAvB;AACD;AAEF,KAtBD,CAwBA,OAAME,CAAN,EAAQ;AACNhB,MAAAA,SAAS,CAACa,OAAV,GAAoB,KAApB;AACAb,MAAAA,SAAS,CAACc,UAAV,GAAuB,KAAvB;AACD;AAEF;;AAGa,QAARG,QAAQ,GAAE;AAEd,QAAG;AACD,UAAIX,GAAG,GAAG,MAAMC,KAAK,CAAC,SAAD,EAAY;AAC/BC,QAAAA,MAAM,EAAE,MADuB;AAE/BC,QAAAA,OAAO,EAAE;AACP,oBAAU,kBADH;AAEP,0BAAgB;AAFT;AAFsB,OAAZ,CAArB;AAQA,UAAIC,MAAM,GAAG,MAAMJ,GAAG,CAACK,IAAJ,EAAnB;;AAEA,UAAGD,MAAM,IAAIA,MAAM,CAACE,OAApB,EAA4B;AAC1B;AACAZ,QAAAA,SAAS,CAACc,UAAV,GAAuB,KAAvB;AACAd,QAAAA,SAAS,CAACe,QAAV,GAAqB,EAArB;AACD;AACF,KAhBD,CAkBA,OAAMC,CAAN,EAAQ;AACN;AACA;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYH,CAAZ;AACD;AAEF;;AAGDI,EAAAA,MAAM,GAAG;AAEP,QAAGpB,SAAS,CAACa,OAAb,EAAsB;AACpB,0BACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF;AAOD,KARD,MASI;AACF,UAAGb,SAAS,CAACc,UAAb,EAAwB;AACtB,4BACE;AAAK,UAAA,SAAS,EAAC,KAAf;AAAA,iCACE;AAAK,YAAA,SAAS,EAAC,WAAf;AAAA,oCACYd,SAAS,CAACe,QADtB,oBAGE,QAAC,YAAD;AAAc,cAAA,IAAI,EAAE,SAApB;AACA,cAAA,QAAQ,EAAE,KADV;AAEA,cAAA,OAAO,EAAE,MAAM,KAAKE,QAAL;AAFf;AAAA;AAAA;AAAA;AAAA,oBAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF;AAWD;AACF;;AAED,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCACI,QAAC,YAAD;AAAc,UAAA,IAAI,EAAE,OAApB;AAA6B,UAAA,QAAQ,EAAE,KAAvC;AAA8C,UAAA,OAAO,EAAE,MAAM,KAAKA,QAAL;AAA7D;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAQD;;AArG+B;;AAwGlC,oBAAelB,QAAQ,CAACI,GAAD,CAAvB","sourcesContent":["import React from 'react'\nimport { observer } from 'mobx-react';\nimport UserStore from './StoreUserData/UserStore';\nimport './App.css';\nimport LoginForm from './LoginForm';\n//import inputField from './inputField';\nimport SubmitButton from './SubmitButton';\n\nclass App extends React.Component {\n\n\n  //This function is to ensure that the user stays logged in if they refresh the page.\n  async componentDidMount(){\n    try{\n      let res = await fetch('/isLoggedIn', {\n        method: 'post',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n      });\n\n      let result = await res.json();\n\n      if (result && result.success) {\n        UserStore.loading = false;\n        UserStore.isLoggedIn = true;\n        UserStore.username = result.username;\n      }\n\n      else{\n        UserStore.loading = false;\n        UserStore.isLoggedIn = false;\n      }\n\n    }\n\n    catch(e){\n      UserStore.loading = false;\n      UserStore.isLoggedIn = false;\n    }\n\n  }\n\n\n  async doLogOut(){\n\n    try{\n      let res = await fetch('/logout', {\n        method: 'post',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n      });\n\n      let result = await res.json();\n\n      if(result && result.success){\n        //UserStore.loading = false;\n        UserStore.isLoggedIn = false;\n        UserStore.username = '';\n      }\n    }\n\n    catch(e){\n      //UserStore.loading = false;\n      //UserStore.IsLoggedIn = true;\n      console.log(e);\n    }\n\n  }\n\n\n  render() {\n\n    if(UserStore.loading) {\n      return(\n        <div className=\"app\">\n          <div className=\"container\">\n            Loading, please wait...\n          </div>\n        </div>\n      )\n    }\n    else{\n      if(UserStore.isLoggedIn){\n        return (\n          <div className=\"app\">\n            <div className=\"container\">\n              Welcome, {UserStore.username}!\n\n              <SubmitButton text={'Log out'}\n              disabled={false}\n              onClick={() => this.doLogOut()}/>\n            </div>\n          </div>\n        )\n      }\n    }\n\n    return (\n      <div className=\"app\">\n        <div className='container'>\n            <SubmitButton text={\"Login\"} disabled={false} onClick={() => this.doLogOut()}/>\n          <LoginForm/>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default observer(App);"]},"metadata":{},"sourceType":"module"}